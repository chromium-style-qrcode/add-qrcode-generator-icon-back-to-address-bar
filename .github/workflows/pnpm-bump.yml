name: Scheduled pnpm packageManager bump

on:
  schedule:
    # 23:59 Asia/Shanghai = 15:59 UTC
    - cron: "59 15 * * *"
  workflow_dispatch:
    inputs:
      force_update:
        required: false
        type: boolean
        default: false
        description: "force update pnpm version even if already latest"

permissions:
  contents: write
  pull-requests: write
  actions: write

env:
  NODE_VERSION: "24.3.0"

jobs:
  bump:
    name: Bump pnpm in packageManager
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Read current pnpm version from package.json
        id: readpm
        run: |
          current=$(jq -r '.packageManager' package.json | awk -F'@' '{print $2}')
          echo "current=$current" >> $GITHUB_OUTPUT

      - name: Get latest pnpm version
        id: latestpm
        run: |
          latest=$(npm view pnpm version)
          echo "latest=$latest" >> $GITHUB_OUTPUT

      - name: Update package.json if needed
        id: updatepkg
        run: |
          current='${{ steps.readpm.outputs.current }}'
          latest='${{ steps.latestpm.outputs.latest }}'
          force_update='${{ inputs.force_update }}'
          echo "Current pnpm: $current, Latest pnpm: $latest"
          echo "Force update: $force_update"
          if [ "$current" != "$latest" ] || [ "$force_update" = "true" ]; then
            tmp=$(mktemp)
            jq ".packageManager=\"pnpm@$latest\" | .engines.pnpm=\">=$latest\"" package.json > "$tmp" && mv "$tmp" package.json
            echo "updated=true" >> $GITHUB_OUTPUT
            if [ "$current" = "$latest" ] && [ "$force_update" = "true" ]; then
              echo "Force updating to same version: $latest"
            fi
          else
            echo "updated=false" >> $GITHUB_OUTPUT
          fi

      - name: Update README files and workflow files
        if: steps.updatepkg.outputs.updated == 'true'
        run: |
          latest='${{ steps.latestpm.outputs.latest }}'

          # Update README.md
          sed -i "s/pnpm ≥ [0-9]\+\.[0-9]\+\.[0-9]\+/pnpm ≥ $latest/g" README.md

          # Update README-zh-CN.md
          sed -i "s/pnpm ≥ [0-9]\+\.[0-9]\+\.[0-9]\+/pnpm ≥ $latest/g" README-zh-CN.md

          # Update .github/workflows/changelog.yml
          sed -i "s/PNPM_VERSION: \"[0-9]\+\.[0-9]\+\.[0-9]\+\"/PNPM_VERSION: \"$latest\"/g" .github/workflows/changelog.yml

          # Update .github/workflows/release.yml
          sed -i "s/PNPM_VERSION: \"[0-9]\+\.[0-9]\+\.[0-9]\+\"/PNPM_VERSION: \"$latest\"/g" .github/workflows/release.yml

      - name: Create Pull Request
        if: steps.updatepkg.outputs.updated == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: chore/bump-pnpm-${{ steps.latestpm.outputs.latest }}
          commit-message: "chore(deps): bump pnpm to ${{ steps.latestpm.outputs.latest }}"
          title: "chore(deps): bump pnpm to ${{ steps.latestpm.outputs.latest }}"
          body: |
            This PR updates pnpm version across all project files to ${{ steps.latestpm.outputs.latest }}.

            - **Current version:** ${{ steps.readpm.outputs.current }}
            - **Latest version:** ${{ steps.latestpm.outputs.latest }}

            ### Updated files:
            - `package.json` (packageManager and engines.pnpm)
            - `README.md`
            - `README-zh-CN.md`
            - `.github/workflows/changelog.yml`
            - `.github/workflows/release.yml`

            Auto-generated by [pnpm-bump workflow](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          delete-branch: true

      - name: No changes
        if: steps.updatepkg.outputs.updated != 'true'
        run: echo "pnpm packageManager already up-to-date."
